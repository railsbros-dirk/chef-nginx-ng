#
# Generated by Chef for <%= node[:fqdn] %> at <%= Time.now %>
# <%= node[:roles].inspect %>

<% if @params[:hosts] && @params[:hosts].size > 0 %>
upstream <%=@application["id"]%>_proxy {
  # for UNIX domain socket setups:
  <% (@params[:hosts] || []).each do |host| %>
  <% port = @application["externals"]["http_interface"]["port"] %>
  server <%= "#{host[:ipaddress]}:#{port}" %>;
  <% end %>
  check interval=3000 rise=2 fall=5 timeout=1000 type=http;
  check_http_send "GET <%= @application['proxy']['check'] || "/" %> HTTP/1.0\r\n\r\n";
  check_http_expect_alive http_2xx http_3xx;
}
<% end %>

server {
  listen <%= @application["proxy"]["port"] || 80 %>;

  location /nginx_status {
    stub_status on;
    access_log   off;
    allow 127.0.0.1;
    deny all;
  }

  location / {
    proxy_set_header   Host             $host;
    proxy_set_header   X-Real-IP        $remote_addr;
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

    client_max_body_size       10m;
    client_body_buffer_size    128k;

    proxy_connect_timeout      90;
    proxy_send_timeout         90;
    proxy_read_timeout         90;

    proxy_buffer_size          4k;
    proxy_buffers              4 32k;
    proxy_busy_buffers_size    64k;
    proxy_temp_file_write_size 64k;
    proxy_redirect     off;

    <% if @params[:hosts] && @params[:hosts].size > 0 %>
    proxy_pass  http://<%=@application["id"]%>_proxy;
    <% end -%>
  }
}